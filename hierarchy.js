var hierarchy =
[
    [ "asyncpp::async_generator< T, Allocator >", "classasyncpp_1_1async__generator.html", null ],
    [ "asyncpp::async_launch_scope", "classasyncpp_1_1async__launch__scope.html", null ],
    [ "asyncpp::atomic_ref< T >", "classasyncpp_1_1atomic__ref.html", null ],
    [ "asyncpp::timer::cancellable_scheduled_entry::cancel_callback", "structasyncpp_1_1timer_1_1cancellable__scheduled__entry_1_1cancel__callback.html", null ],
    [ "asyncpp::channel< T >", "classasyncpp_1_1channel.html", null ],
    [ "asyncpp::defer< TDispatcher >", "structasyncpp_1_1defer.html", null ],
    [ "asyncpp::dispatcher", "classasyncpp_1_1dispatcher.html", [
      [ "asyncpp::simple_dispatcher", "classasyncpp_1_1simple__dispatcher.html", null ],
      [ "asyncpp::thread_pool", "classasyncpp_1_1thread__pool.html", null ],
      [ "asyncpp::timer", "classasyncpp_1_1timer.html", null ]
    ] ],
    [ "asyncpp::exception_policy", "structasyncpp_1_1exception__policy.html", null ],
    [ "asyncpp::fiber< TReturn >", "classasyncpp_1_1fiber.html", null ],
    [ "asyncpp::fiber< void >", "classasyncpp_1_1fiber_3_01void_01_4.html", null ],
    [ "asyncpp::generator< T, Allocator >", "classasyncpp_1_1generator.html", null ],
    [ "asyncpp::intrusive_refcount< T, TCounter >", "classasyncpp_1_1intrusive__refcount.html", null ],
    [ "asyncpp::intrusive_refcount< promise_state< T, TError > >", "classasyncpp_1_1intrusive__refcount.html", null ],
    [ "asyncpp::intrusive_refcount< signal_node_base >", "classasyncpp_1_1intrusive__refcount.html", null ],
    [ "asyncpp::latch", "classasyncpp_1_1latch.html", null ],
    [ "asyncpp::mutex::lock_awaiter", "structasyncpp_1_1mutex_1_1lock__awaiter.html", null ],
    [ "asyncpp::multi_consumer_auto_reset_event", "classasyncpp_1_1multi__consumer__auto__reset__event.html", null ],
    [ "asyncpp::multi_consumer_event", "classasyncpp_1_1multi__consumer__event.html", null ],
    [ "asyncpp::mutex", "classasyncpp_1_1mutex.html", null ],
    [ "asyncpp::mutex_lock", "classasyncpp_1_1mutex__lock.html", null ],
    [ "asyncpp::signal_traits_st::noop_mutex", "structasyncpp_1_1signal__traits__st_1_1noop__mutex.html", null ],
    [ "asyncpp::promise< TResult >", "classasyncpp_1_1promise.html", null ],
    [ "asyncpp::promise< std::monostate >", "classasyncpp_1_1promise.html", [
      [ "asyncpp::promise< void >", "classasyncpp_1_1promise_3_01void_01_4.html", null ]
    ] ],
    [ "asyncpp::channel< T >::read_awaiter", "structasyncpp_1_1channel_1_1read__awaiter.html", null ],
    [ "asyncpp::ref< T >", "classasyncpp_1_1ref.html", null ],
    [ "asyncpp::ref< detail::signal_node_base >", "classasyncpp_1_1ref.html", null ],
    [ "asyncpp::ref< node >", "classasyncpp_1_1ref.html", null ],
    [ "asyncpp::ref< state >", "classasyncpp_1_1ref.html", null ],
    [ "asyncpp::scope_guard< TFunction >", "classasyncpp_1_1scope__guard.html", null ],
    [ "asyncpp::mutex::scoped_lock_awaiter", "structasyncpp_1_1mutex_1_1scoped__lock__awaiter.html", null ],
    [ "asyncpp::scoped_signal_handle", "classasyncpp_1_1scoped__signal__handle.html", null ],
    [ "asyncpp::signal< typename, typename >", "classasyncpp_1_1signal.html", null ],
    [ "asyncpp::signal< void(TParams...), TTraits >", "classasyncpp_1_1signal_3_01void_07TParams_8_8_8_08_00_01TTraits_01_4.html", null ],
    [ "asyncpp::signal_handle", "classasyncpp_1_1signal__handle.html", null ],
    [ "asyncpp::signal_manager< typename, typename, typename >", "classasyncpp_1_1signal__manager.html", null ],
    [ "asyncpp::signal_manager< TEventType, void(TParams...), TTraits >", "classasyncpp_1_1signal__manager_3_01TEventType_00_01void_07TParams_8_8_8_08_00_01TTraits_01_4.html", null ],
    [ "asyncpp::signal_traits_mt", "structasyncpp_1_1signal__traits__mt.html", null ],
    [ "asyncpp::signal_traits_st", "structasyncpp_1_1signal__traits__st.html", null ],
    [ "asyncpp::single_consumer_auto_reset_event", "classasyncpp_1_1single__consumer__auto__reset__event.html", null ],
    [ "asyncpp::single_consumer_event", "classasyncpp_1_1single__consumer__event.html", null ],
    [ "asyncpp::task< T, Allocator >", "classasyncpp_1_1task.html", null ],
    [ "asyncpp::thread_safe_refcount", "structasyncpp_1_1thread__safe__refcount.html", null ],
    [ "asyncpp::thread_unsafe_refcount", "structasyncpp_1_1thread__unsafe__refcount.html", null ],
    [ "asyncpp::threadsafe_queue< T, Container >", "classasyncpp_1_1threadsafe__queue.html", null ],
    [ "asyncpp::timer::scheduled_entry::time_less", "structasyncpp_1_1timer_1_1scheduled__entry_1_1time__less.html", null ],
    [ "asyncpp::channel< T >::write_awaiter", "structasyncpp_1_1channel_1_1write__awaiter.html", null ]
];